    ========= APRÈS =========
    
    
    
    # OPERATIONAL COSTS
    operational_cost = QuadExpr();
    for ω in 1:Nws
        for v in 1:(Vs-1) # to avoid MethodError
            pf_v = x[v,:]'*ps + y_ls[v,:]'*pq; # probability of failure of the station in v or the cable linking it to v0
            cost_multiplier = pf_v*c0*pw[ω];
            #from (6): curtailing of v under ω and failure of v
            add_to_expression!(operational_cost, πw[ω] * sum(z[v,:]) - sum(y_ss[v,vbar,q] * rq_ss[q] for q in 1:Qs, vbar in (v+1):Vs)); 

            # from (6): curtailing of vbar under scenario ω and failure of v
            for vbar=(v+1):Vs
                add_to_expression!(operational_cost, cost_multiplier* πw[ω] *  sum(z[vbar,:])); # power generated by turbines linked to v0
                add_to_expression!(operational_cost, cost_multiplier* min(y_ss[v,vbar,:]'*rq_ss,  πw[ω]*sum(z[v,:]))); # power sent from v to vbar
                add_to_expression!(operational_cost, cost_multiplier* min(x[vbar,:]'*rs,  y_ls[vbar,:]'*rq_ls)); # capacity of the cable/subsattion linking vbar

                add_to_expression!(operational_cost, cost_multiplier* max(pow_gen_turb_lin_vb + power_sent_from_v_to_vb - capa_cabl_subst_link_vb, 0)); 
            end 
        end
    end
    
    
    
    
    
    
    
    ========= AVANT =========
    
    ## CONSTRUCTION COSTS
    cost_ls = onesVs' * y_ls * cqf_ls + dls' * y_ls * cql_ls; # coûts des câbles entre land et sous-stations

    cost_ss = AffExpr();
    for q=1:Qs
        add_to_expression!(cost_ss, .5 *  sum(cql_ss[q] * y_ss[:,:,q] .* dss)); # coûts linéaires des câbles entre sous-stations
        add_to_expression!(cost_ss, .5 *  sum(cqf_ss[q] * y_ss[:,:,q]));        # coûts fixes des câbles entre sous-stations
        # facteur 1/2 car la matrice est symétrique donc on compte deux fois chaque câble
    end

    cost_build_stat = onesVs' * x * cs; # coûts de construction des sous-stations
    cost_sw = sum(ctf * z + ctl * dsw .* z); # coûts des câbles entre land et éoliennes
    construction_cost = cost_ls + cost_ss +  cost_build_stat + cost_sw;
    
    
    
    
    # OPERATIONAL COSTS
    operational_cost = QuadExpr();
    for ω in 1:Nws
        for v in 1:(Vs-1) # to avoid MethodError

            curt_v_under_ω_fail_v = πw[ω] * sum(z[v,:]) - sum(y_ss[v,vbar,q] * rq_ss[q] for q in 1:Qs, vbar in (v+1):Vs); #from (6): curtailing of v under ω and failure of v

             curt_vbar_under_ω_fail_v = AffExpr();
            for vbar=(v+1):Vs
                pow_gen_turb_lin_vb     = max(πw[ω] *  sum(z[vbar,:]), 0); # power generated by turbines linked to v0
                power_sent_from_v_to_vb = max(y_ss[v,vbar,:]'*rq_ss,  πw[ω]*sum(z[v,:])); # power sent from v to vbar
                capa_cabl_subst_link_vb = min(x[vbar,:]'*rs,  y_ls[vbar,:]'*rq_ls); # capacity of the cable/subsattion linking vbar

                curt_vbar_under_ω_fail_v += max(pow_gen_turb_lin_vb + power_sent_from_v_to_vb - capa_cabl_subst_link_vb, 0); # from (6): curtailing of vbar under scenario ω and failure of v
            end 

            pf_v = x[v,:]'*ps + y_ls[v,:]'*pq; # probability of failure of the station in v or the cable linking it to v0
            add_to_expression!(operational_cost, pf_v*c0*pw[ω]*curt_v_under_ω_fail_v + cp*(pw[ω]*curt_v_under_ω_fail_v-Cmax))
        end
    end
    
    
    
    
    
    
    
    
    
    
    
    ======= RETRAVAILLÉ =======
        # OPERATIONAL COSTS
    operational_cost = QuadExpr();
    for ω in 1:Nws
        for v in 1:(Vs-1) # to avoid MethodError

            curt_v_under_ω_fail_v = πw[ω] * sum(z[v,:]) - sum(y_ss[v,vbar,q] * rq_ss[q] for q in 1:Qs, vbar in (v+1):Vs); #from (6): curtailing of v under ω and failure of v

            curt_vbar_under_ω_fail_v = AffExpr();
            for vbar=(v+1):Vs
                pow_gen_turb_lin_vb     = πw[ω] *  sum(z[vbar,:]); # power generated by turbines linked to v0
                power_sent_from_v_to_vb = max(y_ss[v,vbar,:]'*rq_ss,  πw[ω]*sum(z[v,:])); # power sent from v to vbar
                capa_cabl_subst_link_vb = min(x[vbar,:]'*rs,  y_ls[vbar,:]'*rq_ls); # capacity of the cable/subsattion linking vbar

                curt_vbar_under_ω_fail_v += max(pow_gen_turb_lin_vb + power_sent_from_v_to_vb - capa_cabl_subst_link_vb, 0); # from (6): curtailing of vbar under scenario ω and failure of v
            end 

            pf_v = x[v,:]'*ps + y_ls[v,:]'*pq; # probability of failure of the station in v or the cable linking it to v0
            cost_multiplier = pf_v*c0*pw[ω];
            add_to_expression!(operational_cost, cost_multiplier* (curt_v_under_ω_fail_v + curt_vbar_under_ω_fail_v));
        end
    end
